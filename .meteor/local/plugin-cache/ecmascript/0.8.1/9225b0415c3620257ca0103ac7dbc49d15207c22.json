{"metadata":{"usedHelpers":[],"marked":[],"modules":{"imports":[],"exports":{"exported":["messages"],"specifiers":[{"kind":"local","local":"messages","exported":"default"}]}}},"options":{"filename":"imports/ui/components/sort-messages.js","filenameRelative":"imports/ui/components/sort-messages.js","env":{"development":{"plugins":[]}},"retainLines":false,"highlightCode":true,"suppressDeprecationMessages":false,"presets":[],"plugins":[[[],{"generateLetDeclarations":true,"enforceStrictMode":false}],[[],null],[[],{"polyfill":false}],[[],null],[[],null],[[],null],[[],{"allowTopLevelThis":true,"strict":false,"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{"loose":true}],[[],{"loose":true}],[[],null],[[],{"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null]],"ignore":[],"code":true,"metadata":true,"ast":true,"comments":true,"compact":false,"minified":false,"sourceMap":true,"sourceMaps":true,"sourceMapTarget":"imports/ui/components/sort-messages.js.map","sourceFileName":"imports/ui/components/sort-messages.js","babelrc":false,"sourceType":"module","moduleIds":false,"passPerPreset":false,"parserOpts":false,"generatorOpts":false,"basename":"sort-messages"},"ignored":false,"code":"var _getTimeDifference = function (previousTime, currentTime) {\n  var previous = moment(previousTime),\n      current = moment(currentTime);\n  return moment(current).diff(previous, 'minutes');\n};\n\nvar _checkIfOwner = function (previousMessage, message) {\n  return typeof previousMessage !== 'undefined' && previousMessage.owner === message.owner;\n};\n\nvar _decideIfShowHeader = function (previousMessage, message) {\n  if (_checkIfOwner(previousMessage, message)) {\n    message.showHeader = _getTimeDifference(previousMessage.timestamp, message.timestamp) >= 5;\n  } else {\n    message.showHeader = true;\n  }\n};\n\nvar _mapMessages = function (messages) {\n  var previousMessage = void 0;\n  return messages.map(function (message) {\n    _decideIfShowHeader(previousMessage, message);\n\n    previousMessage = message;\n    return message;\n  });\n};\n\nmodule.exportDefault(function (messages) {\n  return _mapMessages(messages);\n});","map":{"version":3,"sources":["imports/ui/components/sort-messages.js"],"names":["_getTimeDifference","previousTime","currentTime","previous","moment","current","diff","_checkIfOwner","previousMessage","message","owner","_decideIfShowHeader","showHeader","timestamp","_mapMessages","messages","map","module","exportDefault"],"mappings":"AAAA,IAAIA,qBAAqB,UAAEC,YAAF,EAAgBC,WAAhB,EAAiC;AACxD,MAAIC,WAAaC,OAAQH,YAAR,CAAjB;AAAA,MACII,UAAaD,OAAQF,WAAR,CADjB;AAEA,SAAOE,OAAQC,OAAR,EAAkBC,IAAlB,CAAwBH,QAAxB,EAAkC,SAAlC,CAAP;AACD,CAJD;;AAMA,IAAII,gBAAgB,UAAEC,eAAF,EAAmBC,OAAnB,EAAgC;AAClD,SAAO,OAAOD,eAAP,KAA2B,WAA3B,IAA0CA,gBAAgBE,KAAhB,KAA0BD,QAAQC,KAAnF;AACD,CAFD;;AAIA,IAAIC,sBAAsB,UAAEH,eAAF,EAAmBC,OAAnB,EAAgC;AACxD,MAAKF,cAAeC,eAAf,EAAgCC,OAAhC,CAAL,EAAiD;AAC/CA,YAAQG,UAAR,GAAqBZ,mBAAoBQ,gBAAgBK,SAApC,EAA+CJ,QAAQI,SAAvD,KAAsE,CAA3F;AACD,GAFD,MAEO;AACLJ,YAAQG,UAAR,GAAqB,IAArB;AACD;AACF,CAND;;AAQA,IAAIE,eAAe,UAAEC,QAAF,EAAgB;AACjC,MAAIP,wBAAJ;AACA,SAAOO,SAASC,GAAT,CAAc,UAAEP,OAAF,EAAe;AAClCE,wBAAqBH,eAArB,EAAsCC,OAAtC;;AACAD,sBAAkBC,OAAlB;AACA,WAAOA,OAAP;AACD,GAJM,CAAP;AAKD,CAPD;;AAlBAQ,OAAOC,aAAP,CA2Be,UAAUH,QAAV,EAAqB;AAClC,SAAOD,aAAcC,QAAd,CAAP;AACD,CA7BD","file":"imports/ui/components/sort-messages.js.map","sourcesContent":["let _getTimeDifference = ( previousTime, currentTime ) => {\n  let previous   = moment( previousTime ),\n      current    = moment( currentTime );\n  return moment( current ).diff( previous, 'minutes' );\n}\n\nlet _checkIfOwner = ( previousMessage, message ) => {\n  return typeof previousMessage !== 'undefined' && previousMessage.owner === message.owner;\n};\n\nlet _decideIfShowHeader = ( previousMessage, message ) => {\n  if ( _checkIfOwner( previousMessage, message ) ) {\n    message.showHeader = _getTimeDifference( previousMessage.timestamp, message.timestamp ) >= 5;\n  } else {\n    message.showHeader = true;\n  }\n};\n\nlet _mapMessages = ( messages ) => {\n  let previousMessage;\n  return messages.map( ( message ) => {\n    _decideIfShowHeader( previousMessage, message );\n    previousMessage = message;\n    return message;\n  });\n};\n\nexport default function( messages ) {\n  return _mapMessages( messages );\n}\n"]},"hash":"9225b0415c3620257ca0103ac7dbc49d15207c22"}
