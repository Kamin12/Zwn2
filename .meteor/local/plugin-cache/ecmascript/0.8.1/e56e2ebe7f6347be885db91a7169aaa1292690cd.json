{"metadata":{"usedHelpers":[],"marked":[],"modules":{"imports":[{"source":"meteor/mongo","imported":["Mongo"],"specifiers":[{"kind":"named","imported":"Mongo","local":"Mongo"}]},{"source":"meteor/aldeed:simple-schema","imported":["SimpleSchema"],"specifiers":[{"kind":"named","imported":"SimpleSchema","local":"SimpleSchema"}]}],"exports":{"exported":["Audio"],"specifiers":[{"kind":"local","local":"Audio","exported":"Audio"}]}}},"options":{"filename":"imports/api/Audio/Audio.js","filenameRelative":"imports/api/Audio/Audio.js","env":{"development":{"plugins":[]}},"retainLines":false,"highlightCode":true,"suppressDeprecationMessages":false,"presets":[],"plugins":[[[],{"generateLetDeclarations":true,"enforceStrictMode":false}],[[],null],[[],{"polyfill":false}],[[],null],[[],null],[[],null],[[],{"allowTopLevelThis":true,"strict":false,"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{"loose":true}],[[],{"loose":true}],[[],null],[[],{"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null]],"ignore":[],"code":true,"metadata":true,"ast":true,"comments":true,"compact":false,"minified":false,"sourceMap":true,"sourceMaps":true,"sourceMapTarget":"imports/api/Audio/Audio.js.map","sourceFileName":"imports/api/Audio/Audio.js","babelrc":false,"sourceType":"module","moduleIds":false,"passPerPreset":false,"parserOpts":false,"generatorOpts":false,"basename":"Audio"},"ignored":false,"code":"module.export({\n  Audio: function () {\n    return Audio;\n  }\n});\nvar Mongo = void 0;\nmodule.watch(require(\"meteor/mongo\"), {\n  Mongo: function (v) {\n    Mongo = v;\n  }\n}, 0);\nvar SimpleSchema = void 0;\nmodule.watch(require(\"meteor/aldeed:simple-schema\"), {\n  SimpleSchema: function (v) {\n    SimpleSchema = v;\n  }\n}, 1);\nvar Audio = new Mongo.Collection('audio');\nAudio.deny({\n  insert: function () {\n    return true;\n  },\n  update: function () {\n    return true;\n  },\n  remove: function () {\n    return true;\n  }\n});\nAudio.schema = new SimpleSchema({\n  audioaudioblz: {\n    type: [Object]\n  },\n  audiomediablz: {\n    type: [Object]\n  },\n  audiotitleblz: {\n    type: String\n  },\n  audiotextblz: {\n    type: String\n  }\n});\nAudio.attachSchema(Audio.schema);","map":{"version":3,"sources":["imports/api/Audio/Audio.js"],"names":["module","export","Audio","Mongo","watch","require","v","SimpleSchema","Collection","deny","insert","update","remove","schema","audioaudioblz","type","Object","audiomediablz","audiotitleblz","String","audiotextblz","attachSchema"],"mappings":"AAAAA,OAAOC,MAAP,CAAc;AAACC,SAAM;AAAA,WAAIA,KAAJ;AAAA;AAAP,CAAd;AAAiC,IAAIC,cAAJ;AAAUH,OAAOI,KAAP,CAAaC,QAAQ,cAAR,CAAb,EAAqC;AAACF,OAAD,YAAOG,CAAP,EAAS;AAACH,YAAMG,CAAN;AAAQ;AAAlB,CAArC,EAAyD,CAAzD;AAA4D,IAAIC,qBAAJ;AAAiBP,OAAOI,KAAP,CAAaC,QAAQ,6BAAR,CAAb,EAAoD;AAACE,cAAD,YAAcD,CAAd,EAAgB;AAACC,mBAAaD,CAAb;AAAe;AAAhC,CAApD,EAAsF,CAAtF;AAGjH,IAAMJ,QAAQ,IAAIC,MAAMK,UAAV,CAAqB,OAArB,CAAd;AAEPN,MAAMO,IAAN,CAAW;AACTC,QADS,cACA;AAAE,WAAO,IAAP;AAAc,GADhB;AAETC,QAFS,cAEA;AAAE,WAAO,IAAP;AAAc,GAFhB;AAGTC,QAHS,cAGA;AAAE,WAAO,IAAP;AAAc;AAHhB,CAAX;AAMAV,MAAMW,MAAN,GAAe,IAAIN,YAAJ,CAAiB;AAChCO,iBAAe;AAACC,UAAM,CAACC,MAAD;AAAP,GADiB;AAEhCC,iBAAe;AAACF,UAAM,CAACC,MAAD;AAAP,GAFiB;AAGhCE,iBAAe;AAACH,UAAMI;AAAP,GAHiB;AAIhCC,gBAAc;AAACL,UAAMI;AAAP;AAJkB,CAAjB,CAAf;AAOAjB,MAAMmB,YAAN,CAAmBnB,MAAMW,MAAzB","file":"imports/api/Audio/Audio.js.map","sourcesContent":["import { Mongo } from 'meteor/mongo';\nimport { SimpleSchema } from 'meteor/aldeed:simple-schema'\n\nexport const Audio = new Mongo.Collection('audio');\n\nAudio.deny({\n  insert() { return true; },\n  update() { return true; },\n  remove() { return true; },\n});\n\nAudio.schema = new SimpleSchema({\naudioaudioblz: {type: [Object]},\naudiomediablz: {type: [Object]},\naudiotitleblz: {type: String},\naudiotextblz: {type: String}\n});\n\nAudio.attachSchema(Audio.schema);\n"]},"hash":"e56e2ebe7f6347be885db91a7169aaa1292690cd"}
