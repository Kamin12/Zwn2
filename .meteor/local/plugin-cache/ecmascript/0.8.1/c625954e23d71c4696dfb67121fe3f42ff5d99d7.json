{"metadata":{"usedHelpers":[],"marked":[],"modules":{"imports":[],"exports":{"exported":[],"specifiers":[]}}},"options":{"filename":"imports/ui/components/YourMessagesReusable.js","filenameRelative":"imports/ui/components/YourMessagesReusable.js","env":{"development":{"plugins":[]}},"retainLines":false,"highlightCode":true,"suppressDeprecationMessages":false,"presets":[],"plugins":[[[],{"generateLetDeclarations":true,"enforceStrictMode":false}],[[],null],[[],{"polyfill":false}],[[],null],[[],null],[[],null],[[],{"allowTopLevelThis":true,"strict":false,"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{"loose":true}],[[],{"loose":true}],[[],null],[[],{"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null]],"ignore":[],"code":true,"metadata":true,"ast":true,"comments":true,"compact":false,"minified":false,"sourceMap":true,"sourceMaps":true,"sourceMapTarget":"imports/ui/components/YourMessagesReusable.js.map","sourceFileName":"imports/ui/components/YourMessagesReusable.js","babelrc":false,"sourceType":"module","moduleIds":false,"passPerPreset":false,"parserOpts":false,"generatorOpts":false,"basename":"YourMessagesReusable"},"ignored":false,"code":"if (Meteor.isClient) {\n  Template.YourMessagesRU.helpers({\n    \"user\": function () {\n      return Meteor.userId.username();\n    }\n  });\n  Template.YourMessagesRU.events({\n    \"click .close3\": function (event, template) {\n      var modal3 = $('#messageswhole');\n      modal3.css('display', 'none');\n      Blaze.remove(template.view);\n    },\n    'click #calltojoin': function (event, template) {\n      var modal3 = $('#messageswhole');\n      modal3.css('display', 'none');\n      Blaze.remove(template.view);\n    },\n    'click #calltologin': function (event, template) {\n      var modal3 = $('#messageswhole');\n      modal3.css('display', 'none');\n      Blaze.remove(template.view);\n    }\n  });\n  Template.YourMessagesRU.events({\n    'click #addmessages': function (event, template) {\n      Blaze.render(Template.NewMessage, template.$('#conversation').get(0));\n    }\n  });\n  Template.YourMessagesRU.onRendered(function () {\n    Meteor.setTimeout(function () {\n      var modal3 = $('.modal35');\n      modal3.css('display', 'block');\n    }, 500);\n  });\n  Template.YourMessagesRU.helpers({\n    'messages': function () {\n      return Messages.find({});\n    }\n  });\n  Template.YourMessagesRU.events({\n    'click #newmessage': function (event, template) {\n      Blaze.render(Template.NewMessage, t.$('#conversation').get(0));\n    },\n    'change #fileInput': function (event, template) {\n      if (e.currentTarget.files && e.currentTarget.files[0]) {\n        // We upload only one file, in case\n        // multiple files were selected\n        var upload = Images.insert({\n          file: e.currentTarget.files[0],\n          streams: 'dynamic',\n          chunkSize: 'dynamic'\n        }, false);\n        upload.on('start', function () {\n          template.currentUpload.set(this);\n        });\n        upload.on('end', function (error, fileObj) {\n          if (error) {\n            alert('Error during upload: ' + error);\n          } else {\n            alert('File \"' + fileObj.name + '\" successfully uploaded');\n          }\n\n          template.currentUpload.set(false);\n        });\n        upload.start();\n      }\n    }\n  });\n  Template.YourMessagesRU.helpers({\n    isLoading: function () {\n      return Template.instance().loading.get();\n    },\n    isDirect: function () {\n      return Template.instance().isDirect.get();\n    },\n    username: function () {\n      return FlowRouter.getParam('channel');\n    }\n  });\n  Template.Sidebar.helpers({\n    currentChannel: function (name) {\n      var current = FlowRouter.getParam('channel');\n\n      if (current) {\n        return current === name || current === \"@\" + name ? 'active' : false;\n      }\n    },\n    messages: function (message) {\n      return Messages.find({});\n    }\n  });\n  Template.Message.onCreated(function () {\n    new SimpleSchema({\n      Member: {\n        type: string\n      },\n      Group: {\n        type: string\n      },\n      Message: {\n        type: string\n      }\n    }).validate(Template.currentData());\n  });\n  Template.Sidebar.onCreated(function () {\n    var template = Template.instance();\n    template.subscribe('sidebar');\n  });\n  Template.SideMessage.onCreated(function () {\n    new SimpleSchema({\n      Member: {\n        type: string\n      },\n      Group: {\n        type: string\n      },\n      Message: {\n        type: string\n      }\n    }).validate(Template.currentData());\n  });\n}","map":{"version":3,"sources":["imports/ui/components/YourMessagesReusable.js"],"names":["Meteor","isClient","Template","YourMessagesRU","helpers","userId","username","events","event","template","modal3","$","css","Blaze","remove","view","render","NewMessage","get","onRendered","setTimeout","Messages","find","t","e","currentTarget","files","upload","Images","insert","file","streams","chunkSize","on","currentUpload","set","error","fileObj","alert","name","start","isLoading","instance","loading","isDirect","FlowRouter","getParam","Sidebar","currentChannel","current","messages","message","Message","onCreated","SimpleSchema","Member","type","string","Group","validate","currentData","subscribe","SideMessage"],"mappings":"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","file":"imports/ui/components/YourMessagesReusable.js.map","sourcesContent":["if (Meteor.isClient) {\n\nTemplate.YourMessagesRU.helpers({\n  \"user\": function() {\n    return Meteor.userId.username();\n  }\n});\n\nTemplate.YourMessagesRU.events({\n  \"click .close3\": function(event, template) {\n    var modal3 = $('#messageswhole');\n    modal3.css('display', 'none');\n    Blaze.remove(template.view);\n  },\n  'click #calltojoin': function(event, template) {\n    var modal3 = $('#messageswhole');\n    modal3.css('display', 'none');\n    Blaze.remove(template.view);\n  },\n  'click #calltologin': function(event, template) {\n    var modal3 = $('#messageswhole');\n    modal3.css('display', 'none');\n    Blaze.remove(template.view);\n  }\n});\n\nTemplate.YourMessagesRU.events({\n  'click #addmessages': function(event, template){\n  Blaze.render(Template.NewMessage, template.$('#conversation').get(0));\n  }\n});\n\nTemplate.YourMessagesRU.onRendered(function() {\n  Meteor.setTimeout(() => {\n    var modal3 = $('.modal35');\n    modal3.css('display', 'block');\n  }, 500);\n});\n\n\n\n\nTemplate.YourMessagesRU.helpers({\n  'messages': function(){\n    return Messages.find({});\n  }\n});\n\nTemplate.YourMessagesRU.events({\n   'click #newmessage': function (event, template) {\n    Blaze.render(Template.NewMessage, t.$('#conversation').get(0));\n  },\n   'change #fileInput': function(event,template){\n     if (e.currentTarget.files && e.currentTarget.files[0]) {\n       // We upload only one file, in case\n       // multiple files were selected\n       var upload = Images.insert({\n         file: e.currentTarget.files[0],\n         streams: 'dynamic',\n         chunkSize: 'dynamic'\n       }, false);\n\n       upload.on('start', function () {\n         template.currentUpload.set(this);\n       });\n\n       upload.on('end', function (error, fileObj) {\n         if (error) {\n           alert('Error during upload: ' + error);\n         } else {\n           alert('File \"' + fileObj.name + '\" successfully uploaded');\n         }\n         template.currentUpload.set(false);\n       });\n\n       upload.start();\n     }\n   }\n });\n\n Template.YourMessagesRU.helpers({\n  isLoading() {\n    return Template.instance().loading.get();\n  },\n  isDirect() {\n    return Template.instance().isDirect.get();\n  },\n  username() {\n    return FlowRouter.getParam( 'channel' );\n  }\n  });\n\n  Template.Sidebar.helpers({\n    currentChannel( name ) {\n   let current = FlowRouter.getParam( 'channel' );\n   if ( current ) {\n     return current === name || current === `@${ name }` ? 'active' : false;\n   }\n },\nmessages (message){\n  return Messages.find({});\n}\n  });\n\n  Template.Message.onCreated( function() {\n  new SimpleSchema({\n    Member: {type: string},\n    Group: {type: string},\n    Message: {type: string},\n  }).validate(Template.currentData());\n  });\n\n  Template.Sidebar.onCreated( () => {\n  let template = Template.instance();\n  template.subscribe( 'sidebar' );\n});\n\n   Template.SideMessage.onCreated( ()=> {\n      new SimpleSchema({\n        Member: {type: string},\n        Group: {type: string},\n        Message: {type: string},\n      }).validate(Template.currentData());\n      });\n\n    }\n"]},"hash":"c625954e23d71c4696dfb67121fe3f42ff5d99d7"}
