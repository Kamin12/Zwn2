{"metadata":{"usedHelpers":[],"marked":[],"modules":{"imports":[],"exports":{"exported":[],"specifiers":[]}}},"options":{"filename":"imports/ui/pages/UserSiteSmart.js","filenameRelative":"imports/ui/pages/UserSiteSmart.js","env":{"development":{"plugins":[]}},"retainLines":false,"highlightCode":true,"suppressDeprecationMessages":false,"presets":[],"plugins":[[[],{"generateLetDeclarations":true,"enforceStrictMode":false}],[[],null],[[],{"polyfill":false}],[[],null],[[],null],[[],null],[[],{"allowTopLevelThis":true,"strict":false,"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{"loose":true}],[[],{"loose":true}],[[],null],[[],{"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null]],"ignore":[],"code":true,"metadata":true,"ast":true,"comments":true,"compact":false,"minified":false,"sourceMap":true,"sourceMaps":true,"sourceMapTarget":"imports/ui/pages/UserSiteSmart.js.map","sourceFileName":"imports/ui/pages/UserSiteSmart.js","babelrc":false,"sourceType":"module","moduleIds":false,"passPerPreset":false,"parserOpts":false,"generatorOpts":false,"basename":"UserSiteSmart"},"ignored":false,"code":"if (Meteor.isClient) {\n  module.watch(require(\"./Users_show_page.html\"));\n  module.watch(require(\"./ProductWebsite.html\"));\n  Template.Users_show_page.onCreated(function () {\n    var _this = this;\n\n    this.getMemberName = function () {\n      return FlowRouter.getParam('Membername');\n    };\n\n    this.autorun(function () {\n      _this.subscribe('userdata', {\n        Membername: _this.getMemberName()\n      });\n    });\n    this.userconnection = new ReactiveDict();\n    this.userconnection.setDefault({\n      editing: false,\n      connected: false,\n      request: true\n    });\n  });\n  Template.ProductWebsite.helpers({\n    productWebs: function (memberName) {\n      return Products.find({\n        productmember: memberName\n      });\n    }\n  });\n  Template.Users_show_page.events({\n    'click #listproducts': function (event, template) {\n      Template.instance.selling.set('true');\n    },\n    'click #messagez': function (event, template) {\n      Blaze.render(Template.NewMessage, document.body);\n    },\n    'click #edit': function (event, template) {\n      template.editing.set(editing, true);\n    },\n    'click #connect': function (event, template) {\n      Meteor.call('addFollowing');\n    }\n  });\n  Template.Users_show_page.helpers({\n    memberNameArray: function () {\n      var instance = Template.instance();\n      var memberName = instance.getMemberName();\n      return Meteor.users.findOne(memberName);\n    },\n    memberArgs: function (memberName) {\n      return Meteor.users.findOne(memberName);\n    }\n  });\n  Template.ProductWebsite.helpers({\n    productWebArgs: function (productWeb) {\n      return Products.findOne(productWeb);\n    },\n    productWebs: function (productWeb) {\n      return Products.findOne(productWeb);\n    }\n  }); /*\n      Template.Users_show_page.helpers({\n          editing(memberName) {\n          return Template.instance.state('editing').get();\n          },\n          selling(memberName){\n          return Template.instance.selling.get();\n          },\n          request(memberName) {\n          return Template.instance.request.get();\n          },\n          connect(memberName){\n          return Template.instance.connect.get();\n          },\n          memberNameArray() {\n          const instance = Template.instance();\n          const memberName = instance.getMemberName();\n          return Meteor.users.findOne(memberName) ? [memberName] : [];\n        },\n          memberArgs(memberName) {\n          const instance = Template.instance();\n          return {\n            Member,\n            editing: instance.state.equals('editing', true),\n            request: instate.state.equals('request', true),\n            connected: instance.state.equals('connected', true)\n          };\n        }\n      });\n      */\n}","map":{"version":3,"sources":["imports/ui/pages/UserSiteSmart.js"],"names":["Meteor","isClient","module","watch","require","Template","Users_show_page","onCreated","getMemberName","FlowRouter","getParam","autorun","subscribe","Membername","userconnection","ReactiveDict","setDefault","editing","connected","request","ProductWebsite","helpers","productWebs","memberName","Products","find","productmember","events","event","template","instance","selling","set","Blaze","render","NewMessage","document","body","call","memberNameArray","users","findOne","memberArgs","productWebArgs","productWeb"],"mappings":"AAAA,IAAIA,OAAOC,QAAX,EAAqB;AAArBC,SAAOC,KAAP,CAAaC,QAAQ,wBAAR,CAAb;AAAgDF,SAAOC,KAAP,CAAaC,QAAQ,uBAAR,CAAb;AAQhDC,WAASC,eAAT,CAAyBC,SAAzB,CAAmC,YAAU;AAAA;;AAE3C,SAAKC,aAAL,GAAqB;AAAA,aAAMC,WAAWC,QAAX,CAAoB,YAApB,CAAN;AAAA,KAArB;;AAEA,SAAKC,OAAL,CAAa,YAAM;AACnB,YAAKC,SAAL,CAAe,UAAf,EAA2B;AAACC,oBAAY,MAAKL,aAAL;AAAb,OAA3B;AACD,KAFC;AAIF,SAAKM,cAAL,GAAsB,IAAIC,YAAJ,EAAtB;AAEA,SAAKD,cAAL,CAAoBE,UAApB,CAA+B;AAC7BC,eAAS,KADoB;AAE7BC,iBAAW,KAFkB;AAG7BC,eAAS;AAHoB,KAA/B;AAMC,GAhBD;AAkBAd,WAASe,cAAT,CAAwBC,OAAxB,CAAgC;AAC9BC,iBAAa,UAASC,UAAT,EAAoB;AAC/B,aAAQC,SAASC,IAAT,CAAc;AAAEC,uBAAgBH;AAAlB,OAAd,CAAR;AACD;AAH6B,GAAhC;AAMAlB,WAASC,eAAT,CAAyBqB,MAAzB,CAAgC;AAC7B,2BAAuB,UAAUC,KAAV,EAAiBC,QAAjB,EAA2B;AAChDxB,eAASyB,QAAT,CAAkBC,OAAlB,CAA0BC,GAA1B,CAA8B,MAA9B;AACD,KAH4B;AAI9B,uBAAmB,UAAUJ,KAAV,EAAiBC,QAAjB,EAA2B;AAC5CI,YAAMC,MAAN,CAAa7B,SAAS8B,UAAtB,EAAkCC,SAASC,IAA3C;AACD,KAN6B;AAO9B,mBAAe,UAAUT,KAAV,EAAiBC,QAAjB,EAA2B;AACzCA,eAASZ,OAAT,CAAiBe,GAAjB,CAAqBf,OAArB,EAA8B,IAA9B;AACA,KAT6B;AAU/B,sBAAkB,UAAUW,KAAV,EAAiBC,QAAjB,EAA2B;AAC5C7B,aAAOsC,IAAP,CAAY,cAAZ;AACE;AAZ4B,GAAhC;AAeCjC,WAASC,eAAT,CAAyBe,OAAzB,CAAiC;AACjCkB,qBAAiB,YAAW;AAC3B,UAAIT,WAAWzB,SAASyB,QAAT,EAAf;AACA,UAAIP,aAAaO,SAAStB,aAAT,EAAjB;AACA,aAAOR,OAAOwC,KAAP,CAAaC,OAAb,CAAqBlB,UAArB,CAAP;AACD,KALiC;AAMlCmB,gBAAY,UAAUnB,UAAV,EAAqB;AAC/B,aAAOvB,OAAOwC,KAAP,CAAaC,OAAb,CAAqBlB,UAArB,CAAP;AACD;AARiC,GAAjC;AAYDlB,WAASe,cAAT,CAAwBC,OAAxB,CAAgC;AAC9BsB,kBAD8B,YACdC,UADc,EACH;AAC3B,aAAOpB,SAASiB,OAAT,CAAiBG,UAAjB,CAAP;AACC,KAH6B;AAI9BtB,eAJ8B,YAIjBsB,UAJiB,EAIL;AACzB,aAAOpB,SAASiB,OAAT,CAAiBG,UAAjB,CAAP;AACC;AAN6B,GAAhC,EA3DqB,CAmErB;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA8BC","file":"imports/ui/pages/UserSiteSmart.js.map","sourcesContent":["if (Meteor.isClient) {\n\n  import './Users_show_page.html';\n  import './ProductWebsite.html';\n\n\n\n\nTemplate.Users_show_page.onCreated(function(){\n\n  this.getMemberName = () => FlowRouter.getParam('Membername');\n\n  this.autorun(() => {\n  this.subscribe('userdata', {Membername: this.getMemberName()});\n});\n\nthis.userconnection = new ReactiveDict();\n\nthis.userconnection.setDefault({\n  editing: false,\n  connected: false,\n  request: true\n});\n\n});\n\nTemplate.ProductWebsite.helpers({\n  productWebs: function(memberName){\n    return  Products.find({ productmember : memberName});\n  }\n});\n\nTemplate.Users_show_page.events({\n   'click #listproducts': function (event, template) {\n     Template.instance.selling.set('true');\n   },\n  'click #messagez': function (event, template) {\n    Blaze.render(Template.NewMessage, document.body);\n  },\n  'click #edit': function (event, template) {\n   template.editing.set(editing, true);\n  },\n 'click #connect': function (event, template) {\n  Meteor.call('addFollowing');\n   }\n });\n\n Template.Users_show_page.helpers({\n memberNameArray: function (){\n  var instance = Template.instance();\n  var memberName = instance.getMemberName();\n  return Meteor.users.findOne(memberName);\n},\nmemberArgs: function (memberName){\n  return Meteor.users.findOne(memberName);\n}\n });\n\n\nTemplate.ProductWebsite.helpers({\n  productWebArgs (productWeb){\n  return Products.findOne(productWeb);\n  },\n  productWebs (productWeb) {\n  return Products.findOne(productWeb);\n  }\n});\n/*\nTemplate.Users_show_page.helpers({\n    editing(memberName) {\n    return Template.instance.state('editing').get();\n    },\n    selling(memberName){\n    return Template.instance.selling.get();\n    },\n    request(memberName) {\n    return Template.instance.request.get();\n    },\n    connect(memberName){\n    return Template.instance.connect.get();\n    },\n    memberNameArray() {\n    const instance = Template.instance();\n    const memberName = instance.getMemberName();\n    return Meteor.users.findOne(memberName) ? [memberName] : [];\n  },\n    memberArgs(memberName) {\n    const instance = Template.instance();\n    return {\n      Member,\n      editing: instance.state.equals('editing', true),\n      request: instate.state.equals('request', true),\n      connected: instance.state.equals('connected', true)\n    };\n  }\n});\n*/\n}\n"]},"hash":"5ce85b88bfd6a2c77b8fc4b78604b1a491ab1213"}
